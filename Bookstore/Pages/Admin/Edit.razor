@page "/admin/book/edit/{id:long}"
@page "/admin/book/create"
@inherits OwningComponentBase<IBookstoreRepository>

<style>
    div.validation-message {
        color: rgb(220, 53, 69);
        font-weight: 500
    }
</style>
<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Book</h3>
<EditForm Model="b" OnValidSubmit="SaveBooks">
    <DataAnnotationsValidator></DataAnnotationsValidator>


    @* Add the relative form sizing classes to the ".input-group" itself and contents within will automaticallt resize*@
    <div class="input-group input-group-sm mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroup-sizing-sm">ID</span>
        </div>
        <input type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm" disabled value="@b.BookId" />
    </div>
    <div class="form-group">
        <label>Title</label>
        <ValidationMessage For="@(() => b.Title)" />
        <InputText class="form-control" @bind-Value="b.Title" />
    </div>
    <div class="form-group">
        <label>Author</label>
        <ValidationMessage For="@(() => b.Author)" />
        <InputText class="form-control" @bind-Value="b.Author" />
    </div>
    <div class="form-group">
        <label>Publisher</label>
        <ValidationMessage For="@(() => b.Publisher)" />
        <InputText class="form-control" @bind-Value="b.Publisher" />
    </div>
    <div class="form-group">
        <label>ISBN</label>
        <ValidationMessage For="@(() => b.ISBN)" />
        <InputText class="form-control" @bind-Value="b.ISBN" />
    </div>
    <div class="form-group">
        <label>Classification</label>
        <ValidationMessage For="@(() => b.Classification)" />
        <InputText class="form-control" @bind-Value="b.Classification" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => b.Category)" />
        <InputText class="form-control" @bind-Value="b.Category" />
    </div>
    <div class="form-group">
        <label>Page Count</label>
        <ValidationMessage For="@(() => b.PageCount)" />
        <InputNumber class="form-control" @bind-Value="b.PageCount" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => b.Price)" />
        <InputNumber class="form-control" @bind-Value="b.Price" />
    </div>
    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/book">Cancel</NavLink>
</EditForm>
        @code {
            [Parameter]
            public long Id { get; set; } = 0;

            public string ThemeColor => Id == 0 ? "primary" : "warning";
            public string TitleText => Id == 0 ? "Create" : "Edit";

            public Books b { get; set; } = new Books();

            public IBookstoreRepository repo => Service;

            protected override void OnParametersSet()
            {
                if (Id != 0) //Existing Book
                {
                    b = repo.Books.FirstOrDefault(x => x.BookId == Id);
                }
            }
            public void SaveBooks()
            {
                if (Id == 0) //New Book
                {
                    repo.CreateBooks(b);
                }
                else
                {
                    repo.SaveBooks(b);
                }
                NavManager.NavigateTo("/admin/book");
            }
            [Inject]
            public NavigationManager NavManager { get; set; }
        }
